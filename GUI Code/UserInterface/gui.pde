/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void knob1_turn1(GKnob source, GEvent event) { //_CODE_:knob1:727750:
  println("knob1 - GKnob >> GEvent." + event + " @ " + millis());
} //_CODE_:knob1:727750:

public void knob2_turn1(GKnob source, GEvent event) { //_CODE_:knob2:601452:
  println("knob2 - GKnob >> GEvent." + event + " @ " + millis());
} //_CODE_:knob2:601452:

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:704728:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:704728:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Smple-A-Sketch");
  knob1 = new GKnob(this, 20, 250, 60, 60, 0.8);
  knob1.setTurnRange(110, 70);
  knob1.setTurnMode(GKnob.CTRL_HORIZONTAL);
  knob1.setSensitivity(1);
  knob1.setShowArcOnly(false);
  knob1.setOverArcOnly(false);
  knob1.setIncludeOverBezel(false);
  knob1.setShowTrack(true);
  knob1.setLimits(0.0, 0.0, 1.0);
  knob1.setShowTicks(true);
  knob1.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  knob1.setOpaque(false);
  knob1.addEventHandler(this, "knob1_turn1");
  knob2 = new GKnob(this, 400, 250, 60, 60, 0.8);
  knob2.setTurnRange(110, 70);
  knob2.setTurnMode(GKnob.CTRL_HORIZONTAL);
  knob2.setSensitivity(1);
  knob2.setShowArcOnly(false);
  knob2.setOverArcOnly(false);
  knob2.setIncludeOverBezel(false);
  knob2.setShowTrack(true);
  knob2.setLimits(0.0, 0.0, 1.0);
  knob2.setShowTicks(true);
  knob2.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  knob2.setOpaque(false);
  knob2.addEventHandler(this, "knob2_turn1");
  displaylabel = new GLabel(this, 30, 20, 420, 210);
  displaylabel.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  displaylabel.setLocalColorScheme(GCScheme.SCHEME_8);
  displaylabel.setOpaque(true);
  imgButton1 = new GImageButton(this, 170, 260, new String[] { "Logo.png", "Logo.png", "Logo.png" } );
  imgButton1.addEventHandler(this, "imgButton1_click1");
}

// Variable declarations 
// autogenerated do not edit
GKnob knob1; 
GKnob knob2; 
GLabel displaylabel; 
GImageButton imgButton1; 
